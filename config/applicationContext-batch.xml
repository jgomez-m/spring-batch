<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Execution Job. -->
    <batch:job id="dataJob">
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="cvsFileItemReader" writer="postgresqlItemWriter"
                             commit-interval="${batch.process.commit.interval}">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <!-- CSV Reader -->
    <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

        <!-- Read a csv file -->
        <property name="resource" value="file:${batch.process.csv.file}" />

        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!-- split it -->
                <property name="lineTokenizer">
                    <bean
                        class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="column1,column2,column3,column4,column5,column6,column7,column8,column9,column10,column11,column12,column13,column14,column15,column16,column17,column18,column19,column20" />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <!-- map to an object -->
                    <bean
                        class="co.com.mm.util.MapFieldSetMapper"/>
                </property>

            </bean>
        </property>
    </bean>

    <!-- Database writer. -->
    <bean id="postgresqlItemWriter"
          class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="sql">
            <value>
            <![CDATA[
            	INSERT INTO demo.spring_batch_test VALUES 
                    (:column1, :column2, :column3, :column4, :column5, :column6,
                     :column7, :column8, :column9, :column10, :column11, :column12,
                     :column13, :column14, :column15, :column16, :column17, :column18,
                     :column19, :column20)
            ]]>
            </value>
        </property>
        <!-- It will take care matching between object property and sql name parameter -->
        <property name="itemSqlParameterSourceProvider">
            <bean class="co.com.mm.util.MapItemSqlParameterSourceProvider" />
        </property>
    </bean>

    <!-- stored job-metadata in memory -->
    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
        <property name="transactionManager" ref="transactionManager" />
    </bean>
    
    <!-- Job launcher. -->
    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>

</beans>